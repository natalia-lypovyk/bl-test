{"version":3,"sources":["layout.js","components/ident-icon/ident-icon.styles.js","components/ident-icon/ident-icon.component.js","components/connect-button/connect-button.component.js","components/account-modal/account-modal.component.js","App.js","index.js"],"names":["Layout","children","flexDirection","alignItems","justifyContent","h","bg","Styled","IdentIcon","styled","div","ref","useRef","account","useEthers","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","slice","ConnectButton","handleOpenModal","activateBrowserWallet","etherBalance","useEtherBalance","display","background","borderRadius","py","px","color","fontSize","parseFloat","formatEther","toFixed","onClick","border","_hover","borderStyle","borderColor","backgroundColor","m","height","fontWeight","mr","length","AccountModal","isOpen","onClose","deactivate","isCentered","size","borderStyled","pt","pb","mb","variant","textDecoration","mt","lineHeight","ml","alignContent","Copy","href","isExternal","ExternalLink","borderBottomLeftRadius","borderBottomRadius","p","textAlign","App","useDisclosure","onOpen","ReactDOM","render","StrictMode","DAppProvider","config","document","getElementById"],"mappings":"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","file":"static/js/main.ad434020.chunk.js","sourcesContent":["import { Flex } from \"@chakra-ui/react\";\n\nexport const Layout = ({ children }) => {\n  return (\n    <Flex\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      h=\"100vh\"\n      bg=\"gray.800\"\n      >\n      {children}\n    </Flex>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nconst IdentIcon = styled.div`\n  height: 1rem;\n  width: 1rem;\n  border-radius: 1.125rem;\n  background-color: black;\n`;\n\nconst Styled = { IdentIcon };\nexport default Styled;\n","import { useEffect, useRef } from \"react\";\nimport { useEthers } from \"@usedapp/core\";\nimport Jazzicon from '@metamask/jazzicon';\n\nimport Styled from \"./ident-icon.styles\";\n\nexport const IdentIcon = () => {\n  const ref = useRef();\n  const { account } = useEthers();\n\n  useEffect(() => {\n    if (account && ref.current) {\n      ref.current.innerHTML = \"\";\n      ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)));\n    }\n  }, [account]);\n\n  return <Styled.IdentIcon ref={ref} />;\n};\n","import { Button, Box, Text } from \"@chakra-ui/react\";\nimport { useEthers, useEtherBalance } from \"@usedapp/core\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { IdentIcon } from \"../ident-icon\";\n\nexport const ConnectButton = ({ handleOpenModal }) => {\n  const {activateBrowserWallet, account} = useEthers();\n  const etherBalance = useEtherBalance(account);\n\n  const handleConnectWallet = () => {\n    activateBrowserWallet();\n  }\n  return account ? (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      background=\"gray.700\"\n      borderRadius=\"xl\"\n      py=\"0\"\n    >\n      <Box px=\"3\">\n        <Text color=\"white\" fontSize=\"md\">\n          {etherBalance && parseFloat(formatEther(etherBalance)).toFixed(3)} ETH\n        </Text>\n      </Box>\n\n      <Button\n        onClick={handleOpenModal}\n        bg=\"gray.800\"\n        border=\"1px solid transparent\"\n        _hover={{\n          border: \"1px\",\n          borderStyle: \"solid\",\n          borderColor: \"blue.400\",\n          backgroundColor: \"gray.700\",\n        }}\n        borderRadius=\"xl\"\n        m=\"1px\"\n        px={3}\n        height=\"38px\"\n      >\n        <Text color=\"white\" fontSize=\"md\" fontWeight=\"medium\" mr=\"2\">\n          {account && `${account.slice(0, 6)}...${account.slice(account.length - 4, account.length)}`}\n        </Text>\n\n        <IdentIcon />\n      </Button>\n    </Box>\n  ) : (\n    <Button onClick={handleConnectWallet}>\n      Connect to a wallet\n    </Button>\n  );\n}\n","import {\n  Box,\n  Button,\n  Flex,\n  Link,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ModalCloseButton,\n  Text,\n} from '@chakra-ui/react';\nimport { ExternalLinkIcon, CopyIcon } from \"@chakra-ui/icons\";\nimport { useEthers } from \"@usedapp/core\";\n\nimport { IdentIcon } from \"../ident-icon\";\n\nexport const AccountModal = ({ isOpen, onClose }) => {\n  const { account, deactivate } = useEthers();\n\n  const deactivateAccount = () => {\n    deactivate();\n    onClose();\n  }\n\n  return (\n    <Modal\n      isCentered size=\"md\"\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <ModalOverlay />\n\n      <ModalContent\n        background=\"gray.900\"\n        border=\"1px\"\n        borderStyled=\"solid\"\n        borderColor=\"gray.700\"\n        borderRadius=\"3xl\"\n      >\n        <ModalHeader\n          color=\"white\"\n          px={4}\n          fontSize=\"lg\"\n          fontWeight=\"medium\"\n        >\n          Account\n        </ModalHeader>\n\n        <ModalCloseButton\n          color=\"white\"\n          fontSize=\"sm\"\n          _hover={{\n            color: \"whiteAlpha.700\",\n          }}\n        />\n\n        <ModalBody pt={2} px={4}>\n          <Box\n            border=\"1px\"\n            borderStyled=\"solid\"\n            borderColor=\"gray.600\"\n            borderRadius=\"3xl\"\n            px={5}\n            pt={4}\n            pb={2}\n            mb={3}\n          >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n              <Text color=\"gray.400\" fontSize=\"sm\">\n                Connected with MetaMask\n              </Text>\n\n              <Button\n                onClick={deactivateAccount}\n                variant=\"outline\"\n                size=\"sm\"\n                borderColor=\"blue.800\"\n                borderRadius=\"3xl\"\n                color=\"blue.500\"\n                fontSize=\"13px\"\n                fontWeight=\"normal\"\n                height=\"26px\"\n                px={2}\n                _hover={{\n                  background: \"none\",\n                  borderColor: \"blue.300\",\n                  textDecoration: \"underline\",\n                }}\n              >\n                Change\n              </Button>\n            </Flex>\n\n            <Flex alignItems=\"center\" mt={2} mb={4} lineHeight={1}>\n              <IdentIcon />\n\n              <Text\n                color=\"white\"\n                fontSize=\"xl\"\n                fontWeight=\"semibold\"\n                ml={2}\n                lineHeight=\"1.1\"\n              >\n                {account && `${account.slice(0, 6)}...${account.slice(account.length - 4, account.length)}`}\n              </Text>\n            </Flex>\n\n            <Flex alignContent=\"center\" m={3}>\n              <Button\n                variant=\"link\"\n                color=\"gray.400\"\n                fontWeight=\"normal\"\n                fontSize=\"sm\"\n                _hover={{\n                  textDecoration: \"none\",\n                  color: \"whiteAlpha.800\",\n                }}\n              >\n                <CopyIcon mr={1} />\n                Copy Address\n              </Button>\n\n              <Link\n                display=\"flex\"\n                alignItems=\"center\"\n                fontSize=\"sm\"\n                color=\"gray.400\"\n                href={`https://ropsten.etherscan.io/address/${account}`}\n                isExternal\n                ml={6}\n                _hover={{\n                  color: \"whiteAlpha.800\",\n                  textDecoration: \"underline\",\n                }}\n              >\n                <ExternalLinkIcon mr={1} />\n                View on Explorer\n              </Link>\n            </Flex>\n          </Box>\n        </ModalBody>\n\n        <ModalFooter\n          justifyContent=\"end\"\n          background=\"gray.700\"\n          borderBottomLeftRadius=\"3xl\"\n          borderBottomRadius=\"3xl\"\n          p={6}\n        >\n          <Text\n            color=\"white\"\n            textAlign=\"left\"\n            fontSize=\"md\"\n            fontWeight=\"medium\"\n          >\n            Your transactions will appear here...\n          </Text>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\nimport { Layout } from \"./layout\";\nimport { ConnectButton, AccountModal } from \"./components\";\n\nexport const App = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <ChakraProvider>\n      <Layout>\n        <ConnectButton handleOpenModal={onOpen} />\n\n        <AccountModal isOpen={isOpen} onClose={onClose} />\n      </Layout>\n    </ChakraProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DAppProvider } from \"@usedapp/core\";\n\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DAppProvider config={{}}>\n      <App />\n    </DAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}